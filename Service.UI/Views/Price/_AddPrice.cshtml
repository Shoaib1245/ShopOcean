@using Newtonsoft.Json;
@model Service.UI.Models.PriceModel
@inject Service.UI.Utilize.IApiService _ApiService;
@{
    var jsondata = await _ApiService.GetJsonAsync("Price/DataGETt");
    var data = JsonConvert.DeserializeObject<List<SizeModel>>(jsondata);
}
<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title">Add Price</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
            <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
        </button>
    </div>
    <div class="modal-body">
        <form id="formdata">
            @Html.HiddenFor(m=>m.ProductId)
            <div class="form-group">
                <label asp-for="SizeId" class="form-label">Size Name <span class="text-danger" id="ctorName"></span></label>
                <div class="input-group mb-3">
                    <span class="input-group-text">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-tag" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M7 7h0a1 1 0 0 1 1 1v0a1 1 0 0 1 -1 1h-1v0a1 1 0 0 1 -1 -1v-1h0a1 1 0 0 1 1 -1h0z"></path>
                            <path d="M3 3l18 18"></path>
                        </svg>

                    </span>
                    @Html.DropDownListFor(m => m.SizeId,new SelectList(data,"Id","SizeName","Select Size"), new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Price" class="form-label">Price <span class="text-danger" id="ctorDescription"></span></label>
                <div class="input-group mb-3">
                    <span class="input-group-text">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-file-description" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M14 4h-4a2 2 0 0 0 -2 2v0a2 2 0 0 0 2 2h4a2 2 0 0 0 2 -2v0a2 2 0 0 0 -2 -2z"></path>
                            <path d="M4 14h16"></path>
                            <path d="M4 10h16"></path>
                            <path d="M4 18h8"></path>
                        </svg>
                    </span>
                    @Html.TextBoxFor(m => m.Price, new { @class = "form-control", placeholder = "Add Price" })
                </div>
            </div>


        </form>

        <div class="modal-footer md-button">
            <button class="btn btn-light-dark" data-bs-dismiss="modal">Discard</button>

            <input type="button" onclick="dataSave();" class="btn btn-primary" value="Save" />
        </div>
    </div>
</div>
<script src="~/assets/jquery.js"></script>
<script>
    var J$ = jQuery.noConflict();
</script>
<script>

    function dataSave() {

            var formdata = new FormData(document.getElementById('formdata'));
            J$.ajax({
                type: 'Post',
                url: '/Price/Savedata',
                processData: false,
                contentType: false,
                data: formdata,
                success: function (result) {
                    debugger;
                    if (result == 1) {
                        toastr.info("Data has been successfully Updated!");
                    }         
                }
            });
       
    }
</script>