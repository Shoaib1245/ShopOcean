@model Service.UI.Models.SubCategoryModel

@using Newtonsoft.Json;
@using Service.UI.Utilize
@inject IApiService _obj
@inject HttpContextAccessor _httpcontextaccessor;
@{
    var sellerid = _httpcontextaccessor.HttpContext.Session.GetString("SellerId");
    var jsondata = await _obj.GetByIdAsync("Category/DataGET",Convert.ToInt16(sellerid));
    var data = JsonConvert.DeserializeObject<List<CategoryModel>>(jsondata);
  
}
<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title">Edit SubCategory</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
            <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
        </button>
    </div>
    <div class="modal-body">
        <form id="FrmdataSave" enctype="multipart/form-data">
            @Html.HiddenFor(m=>m.Id)
            <div class="form-group">
                <label asp-for="CategoryId" class="form-label">Category ID <span class="text-danger" id="ctorCategoryId"></span></label>
                <div class="input-group mb-3">
                    <span class="input-group-text">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-number" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M3 3l18 18"></path>
                        </svg>
                    </span>
                    @Html.DropDownListFor(m => m.CategoryId,new SelectList(data,"Id","Name","Select List"), new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <label asp-for="SubCategoryName" class="form-label">SubCategory Name <span class="text-danger" id="ctorSubCategoryName"></span></label>
                <div class="input-group mb-3">
                    <span class="input-group-text">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-tag" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M7 7h0a1 1 0 0 1 1 1v0a1 1 0 0 1 -1 1h-1v0a1 1 0 0 1 -1 -1v-1h0a1 1 0 0 1 1 -1h0z"></path>
                            <path d="M3 3l18 18"></path>
                        </svg>
                    </span>
                    @Html.TextBoxFor(m => m.SubCategoryName, new { @class = "form-control", placeholder = "SubCategory Name", aria_label = "SubCategoryName" })
                </div>
            </div>

     

            <div class="form-group">
                <label asp-for="SubCategoryImage" class="form-label">SubCategory Image <span class="text-danger" id="ctorImageUrl"></span></label>
                <div class="input-group mb-3">
                    <span class="input-group-text">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-photo" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <rect x="3" y="3" width="18" height="18" rx="2"></rect>
                            <circle cx="12" cy="12" r="3"></circle>
                            <path d="M3 15l6 -6"></path>
                        </svg>
                    </span>
                    @Html.TextBoxFor(m => m.ImageUrl, new { @class = "form-control", type = "file", placeholder = "SubCategory Image", aria_label = "SubCategoryImage" })
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Status" class="form-label">Status <span class="text-danger" id="ctorStatus"></span></label>
                <div class="input-group mb-3">
                    <span class="input-group-text">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-info-circle" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <circle cx="12" cy="12" r="9"></circle>
                            <path d="M12 12v0"></path>
                            <path d="M12 16v-4"></path>
                            <path d="M12 8v-2"></path>
                        </svg>
                    </span>
                    @Html.TextBoxFor(m => m.Status, new { @class = "form-control", placeholder = "Status", aria_label = "Status" })
                </div>
            </div>

           

            <div class="modal-footer md-button">
                <button class="btn btn-light-dark" data-bs-dismiss="modal">Discard</button>
                <input type="button" onclick="DataSave();" class="btn btn-primary" value="Save" />
            </div>
        </form>
    </div>
</div>

<script src="~/assets/jquery.js"></script>
<script>
    var J$ = jQuery.noConflict();
</script>
<script>
    function DataSave() {
        debugger;
        var formdata = new FormData(document.getElementById('FrmdataSave'));
        if(Validation()){
            J$.ajax({
                type: 'POST',
                url: "/SubCategory/Savedata",
                processData: false,
                contentType: false,
                data: formdata,
                success: function (res) {
                    if (res == 1) {
                        toastr.info("Data has been successfully Updated!");
                        TableShows();
                    }
                    else if (res == 2) {
                        toastr.success("Data has been successfully saved!");
                        TableShows();
                    } else {
                        toastr.error("Data not saved.");
                    }
                }
            });
        }
      
    }
    function Validation() {
        debugger
        var isValid = true;      
        J$('form').find('input:not([type="hidden"]),textarea').each(function () {
            debugger
            var value = J$(this).val();
            var name = J$(this).attr('name');

            J$('#ctor' + name).text('');

            if (value == "" && name !== undefined) {

                J$('#ctor' + name).text(name + ' is required, please fill it.');
                isValid = false;
            }

        });

        return isValid;
    }
</script>
